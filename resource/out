#!/bin/bash
set -e

source "$(dirname "$0")/functions.sh"

export directory=$1

json_input=$(cat)  # Read JSON input from stdin
# {
#     "source": {
#       "bucket": "mybucket",
#       "versioned_file": "myobject",
#       "debug": true,          
#     },
#    "params": {
#       "file": "path/to/my_local_file.txt"
#     }
# }

>&2 echo "Put..."

export debug=$(echo $json_input | jq -r .source.debug )

if [ "${debug}" = true ] ; then
    >&2 echo $json_input
fi

validate_inputs "$json_input" || exit 1

export bucket=$(echo $json_input | jq -r .source.bucket )
export versioned_file=$(echo $json_input | jq -r .source.versioned_file )
export file=$(echo $json_input | jq -r .params.file )


if [ "${debug}" = true ] ; then
    >&2 echo "cp \"$directory/$file\" \"gs://${bucket}/${versioned_file}\""
fi

gcloud storage cp "$directory/$file" "gs://${bucket}/${versioned_file}"  


gcloud storage objects describe "gs://${bucket}/${versioned_file}" > object_metadata.yml

current_version=$(cat object_metadata.yml | yq .generation)
creation_time=$(cat object_metadata.yml | yq .creation_time)
update_time=$(cat object_metadata.yml | yq .update_time)
md5_hash=$(cat object_metadata.yml | yq .md5_hash)
metageneration=$(cat object_metadata.yml | yq .metageneration)
storage_url=$(cat object_metadata.yml | yq .storage_url)
size=$(cat object_metadata.yml | yq .size)

# {
#   "version": { "ref": "61cebf" },
#   "metadata": [
#     { "name": "commit", "value": "61cebf" },
#     { "name": "author", "value": "Mick Foley" }
#   ]
# }

output_string="{
  \"version\": { \"ref\": \"${current_version}\" },
  \"metadata\": [
    { \"name\": \"creation_time\", \"value\": \"${creation_time}\"}, \
    { \"name\": \"update_time\", \"value\": \"${update_time}\"}, \
    { \"name\": \"md5_hash\", \"value\": \"${md5_hash}\"}, \
    { \"name\": \"metageneration\", \"value\": \"${metageneration}\"}, \
    { \"name\": \"storage_url\", \"value\": \"${storage_url}\"}, \
    { \"name\": \"size\", \"value\": \"${size}\"} \
  ]
}"

if [ "${debug}" = true ] ; then
    >&2 echo $output_string
fi
echo $output_string